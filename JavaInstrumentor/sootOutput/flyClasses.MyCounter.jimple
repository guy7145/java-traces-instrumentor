public class flyClasses.MyCounter extends java.lang.Object
{
    public static final java.lang.String CLASS_NAME;
    private static java.io.PrintWriter writer;
    public static java.lang.String name;
    public static int value;
    public static java.lang.Object objvalue;
    public static int SHOW_DELTA;
    public static int DELTA_CHANGED;
    public static java.util.HashMap map;
    static java.util.ArrayList last;
    static java.util.ArrayList curr;

    static void <clinit>()
    {
        <flyClasses.MyCounter: java.lang.String CLASS_NAME> = "flyClasses.MyCounter";

        <flyClasses.MyCounter: java.io.PrintWriter writer> = null;

        <flyClasses.MyCounter: java.lang.String name> = "x";

        <flyClasses.MyCounter: int value> = 5;

        <flyClasses.MyCounter: java.lang.Object objvalue> = null;

        <flyClasses.MyCounter: int SHOW_DELTA> = 0;

        <flyClasses.MyCounter: int DELTA_CHANGED> = 0;

        <flyClasses.MyCounter: java.util.ArrayList last> = null;

        <flyClasses.MyCounter: java.util.ArrayList curr> = null;

        return;
    }

    public void <init>()
    {
        flyClasses.MyCounter r0;

        r0 := @this: flyClasses.MyCounter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addVar(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        java.util.HashMap $r2, $r3, $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = <flyClasses.MyCounter: java.util.HashMap map>;

        if $r2 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <flyClasses.MyCounter: java.util.HashMap map> = $r5;

     label1:
        $r3 = <flyClasses.MyCounter: java.util.HashMap map>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void toggleDelta()
    {
        int $i0, $i1;
        byte $b2;

        $i0 = <flyClasses.MyCounter: int DELTA_CHANGED>;

        if $i0 != 0 goto label3;

        $i1 = <flyClasses.MyCounter: int SHOW_DELTA>;

        if $i1 != 1 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        <flyClasses.MyCounter: int SHOW_DELTA> = $b2;

        <flyClasses.MyCounter: int DELTA_CHANGED> = 1;

     label3:
        return;
    }

    public static void init(java.lang.String)
    {
        java.lang.String r0, $r12;
        java.io.PrintWriter $r2, $r3, $r6, $r8, $r9;
        java.util.ArrayList $r4, $r5;
        java.io.FileWriter $r7;
        java.io.IOException $r10;
        java.io.PrintStream $r11;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        <flyClasses.MyCounter: java.util.ArrayList curr> = $r5;

        $r6 = new java.io.PrintWriter;

        $r7 = new java.io.FileWriter;

        specialinvoke $r7.<java.io.FileWriter: void <init>(java.lang.String)>("output.spec");

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.Writer)>($r7);

        <flyClasses.MyCounter: java.io.PrintWriter writer> = $r6;

        $r8 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r8.<java.io.PrintWriter: void println(java.lang.String)>(r0);

        $r9 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r9.<java.io.PrintWriter: void flush()>();

     label2:
        $r3 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("\texample {[");

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r12 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label5:
        <flyClasses.MyCounter: java.lang.String name> = "ERROR";

        <flyClasses.MyCounter: int value> = -1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        <flyClasses.MyCounter: java.util.ArrayList curr> = $r4;

        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public static void method_finish()
    {
        java.io.PrintWriter $r0, $r2, $r3;
        java.io.PrintStream $r1;

        $r0 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        if $r0 == null goto label1;

        $r2 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>("\n\t}");

        $r3 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        goto label2;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Error");

     label2:
        return;
    }

    public static void printObjValue(int)
    {
        int i0, i1, $i2, i3, i4, $i5;
        java.lang.reflect.Field[] r0;
        java.lang.reflect.Field r1;
        java.lang.Object $r4, $r5, $r7, $r8, $r14, $r16, $r17, $r28, $r29;
        java.lang.Class $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r19, $r20, $r22, $r23, $r31, $r37, $r39, $r42, $r44, $r45, $r47, $r49, $r55;
        java.lang.String $r10, $r12, $r13, $r18, $r21, $r24, $r26, $r27, $r30, $r38, $r41, $r43, $r46, $r50, $r52, $r53, $r54, r56, r57;
        java.lang.Object[] $r11, $r25, $r40, $r51;
        java.util.HashMap $r15;
        java.util.ArrayList $r32, $r33, $r35, $r58;
        java.io.PrintWriter $r34, $r36;
        java.lang.Exception $r48;

        i0 := @parameter0: int;

        r56 = "";

        $r4 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        if $r4 != null goto label02;

        $r40 = newarray (java.lang.Object)[2];

        $r41 = <flyClasses.MyCounter: java.lang.String name>;

        $r40[0] = $r41;

        $r40[1] = "null";

        r57 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s", $r40);

        if i0 != 0 goto label01;

        $r45 = new java.lang.StringBuilder;

        $r46 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r57);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r46);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r56 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label01:
        $r42 = new java.lang.StringBuilder;

        $r43 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r57);

        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>($r43);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r56 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label02:
        $r5 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r0 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i3 = 0;

        i1 = lengthof r0;

        i4 = 0;

        goto label10;

     label03:
        r1 = r0[i4];

     label04:
        $r7 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r8 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r7);

        $z0 = $r8 instanceof java.lang.Integer;

        if $z0 == 0 goto label05;

        $r23 = new java.lang.StringBuilder;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r56);

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);

        $r25 = newarray (java.lang.Object)[3];

        $r26 = <flyClasses.MyCounter: java.lang.String name>;

        $r25[0] = $r26;

        $r27 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r25[1] = $r27;

        $r28 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r29 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r28);

        $r25[2] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r25);

        $r31 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        r56 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label05:
        $r9 = new java.lang.StringBuilder;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r56);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r11 = newarray (java.lang.Object)[3];

        $r12 = <flyClasses.MyCounter: java.lang.String name>;

        $r11[0] = $r12;

        $r13 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r11[1] = $r13;

        $r15 = <flyClasses.MyCounter: java.util.HashMap map>;

        $r14 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r16 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r14);

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        $r11[2] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r11);

        $r19 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r56 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        goto label08;

     label07:
        $r48 := @caughtexception;

        $r49 = new java.lang.StringBuilder;

        $r50 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r56);

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>($r50);

        $r51 = newarray (java.lang.Object)[3];

        $r52 = <flyClasses.MyCounter: java.lang.String name>;

        $r51[0] = $r52;

        $r53 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r51[1] = $r53;

        $r51[2] = "null";

        $r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r51);

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        i3 = i3 + 1;

        $i5 = lengthof r0;

        if i3 >= $i5 goto label09;

        $r20 = new java.lang.StringBuilder;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r56);

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r56 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        i4 = i4 + 1;

     label10:
        if i4 < i1 goto label03;

        if i0 != 0 goto label11;

        $r37 = new java.lang.StringBuilder;

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r56);

        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>($r38);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r56 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r58 = <flyClasses.MyCounter: java.util.ArrayList last>;

        if $r58 != null goto label12;

        $r35 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

        $r36 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r36.<java.io.PrintWriter: void print(java.lang.String)>(r56);

        goto label14;

     label12:
        $r32 = <flyClasses.MyCounter: java.util.ArrayList last>;

        $z1 = virtualinvoke $r32.<java.util.ArrayList: boolean contains(java.lang.Object)>(r56);

        if $z1 == 0 goto label13;

        $i2 = <flyClasses.MyCounter: int SHOW_DELTA>;

        if $i2 != 0 goto label14;

     label13:
        $r33 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r33.<java.util.ArrayList: boolean add(java.lang.Object)>(r56);

        $r34 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r34.<java.io.PrintWriter: void print(java.lang.String)>(r56);

     label14:
        return;

        catch java.lang.IllegalArgumentException from label04 to label06 with label07;
        catch java.lang.IllegalAccessException from label04 to label06 with label07;
    }

    public static void printParamObjValue(int)
    {
        int i0, i1, i2, i3, $i4;
        java.lang.String r0, $r5, $r7, $r8, $r14, $r21, $r23, $r24, $r29, $r32, $r35, $r37, $r38, $r41, $r44, $r47, $r50, $r52, $r53, $r56, $r59, $r63, $r65, $r66, $r67, r69, r70, r71;
        java.lang.reflect.Field[] r1;
        java.lang.reflect.Field r2;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r12, $r13, $r20, $r30, $r31, $r33, $r34, $r42, $r43, $r45, $r46, $r48, $r49, $r54, $r55, $r57, $r58, $r60, $r62, $r68;
        java.lang.Object $r15, $r16, $r18, $r19, $r25, $r27, $r28, $r39, $r40;
        java.lang.Class $r17;
        boolean $z0;
        java.lang.Object[] $r22, $r36, $r51, $r64;
        java.util.HashMap $r26;
        java.lang.Exception $r61;
        java.util.ArrayList $r72;
        java.io.PrintWriter $r73;

        i0 := @parameter0: int;

        $r5 = <flyClasses.MyCounter: java.lang.String name>;

        r0 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = new java.lang.StringBuilder;

        $r7 = <flyClasses.MyCounter: java.lang.String name>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==o");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r69 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("o");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        <flyClasses.MyCounter: java.lang.String name> = $r14;

        $r15 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        if $r15 != null goto label02;

        $r49 = new java.lang.StringBuilder;

        $r50 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r49.<java.lang.StringBuilder: void <init>(java.lang.String)>($r50);

        $r51 = newarray (java.lang.Object)[2];

        $r52 = <flyClasses.MyCounter: java.lang.String name>;

        $r51[0] = $r52;

        $r51[1] = "null";

        $r53 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s", $r51);

        $r54 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        r70 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        if i0 != 0 goto label01;

        $r58 = new java.lang.StringBuilder;

        $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r70);

        specialinvoke $r58.<java.lang.StringBuilder: void <init>(java.lang.String)>($r59);

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r71 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label01:
        $r55 = new java.lang.StringBuilder;

        $r56 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r70);

        specialinvoke $r55.<java.lang.StringBuilder: void <init>(java.lang.String)>($r56);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r71 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label02:
        $r16 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i2 = 0;

        i1 = lengthof r1;

        i3 = 0;

        goto label10;

     label03:
        r2 = r1[i3];

     label04:
        $r18 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r19 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r18);

        $z0 = $r19 instanceof java.lang.Integer;

        if $z0 == 0 goto label05;

        $r34 = new java.lang.StringBuilder;

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>($r35);

        $r36 = newarray (java.lang.Object)[3];

        $r37 = <flyClasses.MyCounter: java.lang.String name>;

        $r36[0] = $r37;

        $r38 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r36[1] = $r38;

        $r39 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r40 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r39);

        $r36[2] = $r40;

        $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r36);

        $r42 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        r69 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label05:
        $r20 = new java.lang.StringBuilder;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);

        $r22 = newarray (java.lang.Object)[3];

        $r23 = <flyClasses.MyCounter: java.lang.String name>;

        $r22[0] = $r23;

        $r24 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r22[1] = $r24;

        $r26 = <flyClasses.MyCounter: java.util.HashMap map>;

        $r25 = <flyClasses.MyCounter: java.lang.Object objvalue>;

        $r27 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r25);

        $r28 = virtualinvoke $r26.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r27);

        $r22[2] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r22);

        $r30 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        r69 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        goto label08;

     label07:
        $r61 := @caughtexception;

        $r62 = new java.lang.StringBuilder;

        $r63 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r62.<java.lang.StringBuilder: void <init>(java.lang.String)>($r63);

        $r64 = newarray (java.lang.Object)[3];

        $r65 = <flyClasses.MyCounter: java.lang.String name>;

        $r64[0] = $r65;

        $r66 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r64[1] = $r66;

        $r64[2] = "null";

        $r67 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s==%s", $r64);

        $r68 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        i2 = i2 + 1;

        $i4 = lengthof r1;

        if i2 >= $i4 goto label09;

        $r31 = new java.lang.StringBuilder;

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>($r32);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r69 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        i3 = i3 + 1;

     label10:
        if i3 < i1 goto label03;

        if i0 != 0 goto label11;

        $r46 = new java.lang.StringBuilder;

        $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r46.<java.lang.StringBuilder: void <init>(java.lang.String)>($r47);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        r71 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $r43 = new java.lang.StringBuilder;

        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r69);

        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>($r44);

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r71 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r72 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r72.<java.util.ArrayList: boolean add(java.lang.Object)>(r71);

        $r73 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r73.<java.io.PrintWriter: void print(java.lang.String)>(r71);

        return;

        catch java.lang.IllegalArgumentException from label04 to label06 with label07;
        catch java.lang.IllegalAccessException from label04 to label06 with label07;
    }

    public static void printValue(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r0, $r9;
        java.lang.String $r1, $r10, r12;
        java.lang.Integer $r2, $r11;
        java.util.ArrayList $r3, $r4, $r5, $r7;
        boolean $z0;
        java.io.PrintWriter $r6, $r8;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r9 = newarray (java.lang.Object)[2];

        $r10 = <flyClasses.MyCounter: java.lang.String name>;

        $r9[0] = $r10;

        $i3 = <flyClasses.MyCounter: int value>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r9[1] = $r11;

        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s && ", $r9);

        goto label2;

     label1:
        $r0 = newarray (java.lang.Object)[2];

        $r1 = <flyClasses.MyCounter: java.lang.String name>;

        $r0[0] = $r1;

        $i1 = <flyClasses.MyCounter: int value>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[1] = $r2;

        r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s]", $r0);

     label2:
        $r3 = <flyClasses.MyCounter: java.util.ArrayList last>;

        if $r3 != null goto label3;

        $r7 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r8 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r8.<java.io.PrintWriter: void print(java.lang.String)>(r12);

        goto label5;

     label3:
        $r4 = <flyClasses.MyCounter: java.util.ArrayList last>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r12);

        if $z0 == 0 goto label4;

        $i2 = <flyClasses.MyCounter: int SHOW_DELTA>;

        if $i2 != 0 goto label5;

     label4:
        $r5 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r6 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r6.<java.io.PrintWriter: void print(java.lang.String)>(r12);

     label5:
        return;
    }

    public static void printParamValue(int)
    {
        int i0, $i1, $i2;
        java.lang.Object[] $r0, $r5;
        java.lang.String $r1, $r6, r8;
        java.lang.Integer $r2, $r7;
        java.util.ArrayList $r3;
        java.io.PrintWriter $r4;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = <flyClasses.MyCounter: java.lang.String name>;

        $r5[0] = $r6;

        $i2 = <flyClasses.MyCounter: int value>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[1] = $r7;

        r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s && ", $r5);

        goto label2;

     label1:
        $r0 = newarray (java.lang.Object)[2];

        $r1 = <flyClasses.MyCounter: java.lang.String name>;

        $r0[0] = $r1;

        $i1 = <flyClasses.MyCounter: int value>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[1] = $r2;

        r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s==%s]", $r0);

     label2:
        $r3 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        $r4 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r4.<java.io.PrintWriter: void print(java.lang.String)>(r8);

        return;
    }

    public static void finish()
    {
        java.io.PrintWriter $r0, $r1, $r2, $r3;

        $r0 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        if $r0 == null goto label1;

        $r1 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n}");

        $r2 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r2.<java.io.PrintWriter: void flush()>();

        $r3 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

     label1:
        return;
    }

    public static void printer(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.io.PrintWriter $r1, $r4;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3, $r5;

        r0 := @parameter0: java.lang.String;

        $r1 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        if $r1 == null goto label1;

        $r2 = <flyClasses.MyCounter: java.util.ArrayList curr>;

        <flyClasses.MyCounter: java.util.ArrayList last> = $r2;

        $r4 = <flyClasses.MyCounter: java.io.PrintWriter writer>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("\n\t-> ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintWriter: void print(java.lang.String)>($r6);

     label1:
        return;
    }

    public static int return1()
    {
        return 1;
    }
}
